<?php

/**
 * This is the model base class for the table "tbl_faculty".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TblFaculty".
 *
 * Columns in table "tbl_faculty" available as properties of the model,
 * followed by relations of table "tbl_faculty" available as properties of the model.
 *
 * @property integer $faculty_id
 * @property string $faculty_name
 * @property integer $subject_id
 *
 * @property TblSubject $subject
 * @property TblSubject $tblSubject
 * @property TblTeacher[] $tblTeachers
 * @property TblUser[] $tblUsers
 */
abstract class BaseTblFaculty extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_faculty';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TblFaculty|TblFaculties', $n);
	}

	public static function representingColumn() {
		return 'faculty_name';
	}

	public function rules() {
		return array(
			array('subject_id', 'numerical', 'integerOnly'=>true),
			array('faculty_name', 'length', 'max'=>100),
			array('faculty_name, subject_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('faculty_id, faculty_name, subject_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'subject' => array(self::BELONGS_TO, 'TblSubject', 'subject_id'),
			'tblSubject' => array(self::HAS_ONE, 'TblSubject', 'subject_id'),
			'tblTeachers' => array(self::HAS_MANY, 'TblTeacher', 'teacher_faculty'),
			'tblUsers' => array(self::HAS_MANY, 'TblUser', 'user_faculty'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'faculty_id' => Yii::t('app', 'Faculty'),
			'faculty_name' => Yii::t('app', 'Faculty Name'),
			'subject_id' => null,
			'subject' => null,
			'tblSubject' => null,
			'tblTeachers' => null,
			'tblUsers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('faculty_id', $this->faculty_id);
		$criteria->compare('faculty_name', $this->faculty_name, true);
		$criteria->compare('subject_id', $this->subject_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}