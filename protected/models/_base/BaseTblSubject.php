<?php

/**
 * This is the model base class for the table "tbl_subject".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TblSubject".
 *
 * Columns in table "tbl_subject" available as properties of the model,
 * followed by relations of table "tbl_subject" available as properties of the model.
 *
 * @property integer $subject_id
 * @property string $subject_name
 * @property integer $faculty_id
 * @property string $subject_id_university
 *
 * @property TblFaculty[] $tblFaculties
 * @property TblFaculty $subject
 */
abstract class BaseTblSubject extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_subject';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TblSubject|TblSubjects', $n);
	}

	public static function representingColumn() {
		return 'subject_name';
	}

	public function rules() {
		return array(
			array('faculty_id', 'numerical', 'integerOnly'=>true),
			array('subject_name, subject_id_university', 'length', 'max'=>100),
			array('subject_name, faculty_id, subject_id_university', 'default', 'setOnEmpty' => true, 'value' => null),
			array('subject_id, subject_name, faculty_id, subject_id_university', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tblFaculties' => array(self::HAS_MANY, 'TblFaculty', 'subject_id'),
			'subject' => array(self::BELONGS_TO, 'TblFaculty', 'subject_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'subject_id' => null,
			'subject_name' => Yii::t('app', 'Subject Name'),
			'faculty_id' => Yii::t('app', 'Faculty'),
			'subject_id_university' => Yii::t('app', 'Subject Id University'),
			'tblFaculties' => null,
			'subject' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('subject_id', $this->subject_id);
		$criteria->compare('subject_name', $this->subject_name, true);
		$criteria->compare('faculty_id', $this->faculty_id);
		$criteria->compare('subject_id_university', $this->subject_id_university, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}