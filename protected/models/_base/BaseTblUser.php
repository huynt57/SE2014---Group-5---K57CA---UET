<?php

/**
 * This is the model base class for the table "tbl_user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TblUser".
 *
 * Columns in table "tbl_user" available as properties of the model,
 * followed by relations of table "tbl_user" available as properties of the model.
 *
 * @property integer $user_id
 * @property string $user_name
 * @property string $user_password
 * @property integer $user_status
 * @property string $user_email
 * @property string $user_class
 * @property integer $user_faculty
 * @property string $user_about
 * @property integer $user_type
 *
 * @property TblDoc[] $tblDocs
 * @property TblPost[] $tblPosts
 * @property TblPost $user
 * @property TblFaculty $userFaculty
 */
abstract class BaseTblUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TblUser|TblUsers', $n);
	}

	public static function representingColumn() {
		return 'user_name';
	}

	public function rules() {
		return array(
			array('user_status, user_faculty, user_type', 'numerical', 'integerOnly'=>true),
			array('user_name, user_password, user_email, user_class', 'length', 'max'=>100),
			array('user_about', 'safe'),
			array('user_name, user_password, user_status, user_email, user_class, user_faculty, user_about, user_type', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, user_name, user_password, user_status, user_email, user_class, user_faculty, user_about, user_type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tblDocs' => array(self::HAS_MANY, 'TblDoc', 'doc_user_id'),
			'tblPosts' => array(self::HAS_MANY, 'TblPost', 'post_author'),
			'user' => array(self::BELONGS_TO, 'TblPost', 'user_id'),
			'userFaculty' => array(self::BELONGS_TO, 'TblFaculty', 'user_faculty'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_id' => null,
			'user_name' => Yii::t('app', 'User Name'),
			'user_password' => Yii::t('app', 'User Password'),
			'user_status' => Yii::t('app', 'User Status'),
			'user_email' => Yii::t('app', 'User Email'),
			'user_class' => Yii::t('app', 'User Class'),
			'user_faculty' => null,
			'user_about' => Yii::t('app', 'User About'),
			'user_type' => Yii::t('app', 'User Type'),
			'tblDocs' => null,
			'tblPosts' => null,
			'user' => null,
			'userFaculty' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('user_name', $this->user_name, true);
		$criteria->compare('user_password', $this->user_password, true);
		$criteria->compare('user_status', $this->user_status);
		$criteria->compare('user_email', $this->user_email, true);
		$criteria->compare('user_class', $this->user_class, true);
		$criteria->compare('user_faculty', $this->user_faculty);
		$criteria->compare('user_about', $this->user_about, true);
		$criteria->compare('user_type', $this->user_type);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}