<?php

/**
 * This is the model base class for the table "tbl_doc".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TblDo".
 *
 * Columns in table "tbl_doc" available as properties of the model,
 * followed by relations of table "tbl_doc" available as properties of the model.
 *
 * @property integer $doc_id
 * @property string $doc_url
 * @property string $doc_name
 * @property integer $doc_status
 * @property integer $doc_user_id
 * @property string $doc_scribd_id
 *
 * @property TblUser $docUser
 */
abstract class BaseTblDo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_doc';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TblDo|TblDos', $n);
	}

	public static function representingColumn() {
		return 'doc_url';
	}

	public function rules() {
		return array(
			array('doc_id', 'required'),
			array('doc_id, doc_status, doc_user_id', 'numerical', 'integerOnly'=>true),
			array('doc_url, doc_name, doc_scribd_id', 'length', 'max'=>100),
			array('doc_url, doc_name, doc_status, doc_user_id, doc_scribd_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('doc_id, doc_url, doc_name, doc_status, doc_user_id, doc_scribd_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'docUser' => array(self::BELONGS_TO, 'TblUser', 'doc_user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'doc_id' => Yii::t('app', 'Doc'),
			'doc_url' => Yii::t('app', 'Doc Url'),
			'doc_name' => Yii::t('app', 'Doc Name'),
			'doc_status' => Yii::t('app', 'Doc Status'),
			'doc_user_id' => null,
			'doc_scribd_id' => Yii::t('app', 'Doc Scribd'),
			'docUser' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('doc_id', $this->doc_id);
		$criteria->compare('doc_url', $this->doc_url, true);
		$criteria->compare('doc_name', $this->doc_name, true);
		$criteria->compare('doc_status', $this->doc_status);
		$criteria->compare('doc_user_id', $this->doc_user_id);
		$criteria->compare('doc_scribd_id', $this->doc_scribd_id, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}